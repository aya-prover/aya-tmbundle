#
# Syntax highlighting for Aya, used by GitHub
#

scopeName: source.aya
name: Aya
fileTypes:
- aya

patterns:
- # Line comments
  begin: '//'
  end: '$'
  name: comment.line.double-dash.aya
- # Block comments
  begin: '/*'
  end: '*/'
  name: comment.block.aya
- # Names of datatypes/struct/constructors
  match: '(data|open[[:space:]]+data|struct|extends|new)[[:space:]]+([^:,;\\\(\){}@"[:space:]]+)'
  captures:
    '1':
      name: keyword.other.aya
    '2':
      name: entity.name.type.aya
- # Names of module/import
  match: '(open[[:space:]]+import|open(?![[:space:]]data)|module|import)[[:space:]]+([^:,;\\\(\){}@"[:space:]]+)'
  captures:
    '1':
      name: keyword.other.aya
    '2':
      name: support.other
- # Name of functions
  match: '(def|prim)[[:space:]]+(inline|opaque)?[[:space:]]+([^:;\\\(\){}@"[:space:]]+)'
  captures:
    '1':
      name: keyword.other.aya
    '1':
      name: keyword.other.aya
    '3':
      name: entity.name.function.aya
- # Generalize
  match: '(variable)[[:space:]]+(([^:,;\\\(\){}@"[:space:]]+([[:space:]]*,[[:space:]]*)?)+)[[:space:]]*\:[[:space:]]*([^:,;\\\(\){}@"[:space:]]+)'
  captures:
    '1':
      name: keyword.other.aya
    '2':
      name: entity.name.aya
    '5':
      name: entity.name.type.aya
- # Other keywords
  match: '\b(example|counterexample|looser|tighter|open|Sig|Pi|match|infix|infixl|infixr|fixl|fixr|twin|Type|Set|Prop|ISet|as|public|private|using|hiding|coerce|inline)\b'
  name: keyword.other.aya
- # Space-sensitive symbols
  match: '\b(=>|->|:=|**)\b'
  name: keyword.other.aya
- # Space-insensitive symbols
  match: ',|\\|\|'
  name: keyword.other.aya
- # String literals
  begin: '"'
  end: '"'
  name: string.quoted.double.aya
- # Numeric literals
  match: '\b-?\d+\b'
  name: constant.numeric.aya
# End
